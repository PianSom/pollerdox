(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var a=n(3),o=n(7),r=(n(0),n(96)),i={id:"conf1",title:"Final steps"},s={unversionedId:"conf1",id:"conf1",isDocsHomePage:!1,title:"Final steps",description:"Configuring InfluxDB Grafana Datasource",source:"@site/docs/conf1.md",slug:"/conf1",permalink:"/pollerdox/docs/conf1",version:"current",sidebar:"someSidebar",previous:{title:"NAS - Synology",permalink:"/pollerdox/docs/ins8"},next:{title:"Troubleshooting",permalink:"/pollerdox/docs/tro1"}},l=[{value:"Configuring InfluxDB Grafana Datasource",id:"configuring-influxdb-grafana-datasource",children:[]},{value:"Import Grafana Dashboards",id:"import-grafana-dashboards",children:[]}],d={toc:l};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"configuring-influxdb-grafana-datasource"},"Configuring InfluxDB Grafana Datasource"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"Click Add your first data source on the home page you see after logon.\nSelect the influxdb option\nSet the following fields:\n    Name = UniFi InfluxDB (or whatever name you want) and set to default\n    URL = http://influxdb1:8086\n    Database = unifi\n    Username = unifipoller\n    Password = unifipoller\nNo other fields need to be changed or set on this page.\nClick Save & Test\n    You should get green banner above the save and test that says 'Data Source is Working'\n    To return to the homepage click the icon with 4 squares on the left nav-bar and select home\n")),Object(r.b)("h2",{id:"import-grafana-dashboards"},"Import Grafana Dashboards"),Object(r.b)("p",null,"This project provides a few Grafana dashboards. They are available on Grafana.com."),Object(r.b)("p",null,"Keep in mind these dashboards are just examples. You should make a single dedicated folder in Grafana to keep all of them in, and copy the graphs to new dashboards that you want to maintain. From time to time I will release new features (like multi-site support and multi-controller support) that brings new benefits to the existing dashboards. When that happens I update them. Keeping an example set allows you to update too, inspect the changes, and apply them to your own custom dashboards.\nRecommendations"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"Import the provided dashboards into their own folder, so they're easy to find.\n    Do not make one folder per dashboard.\n    Make one folder for all of them.\n    The folder name cannot be the same as the dashboard names, or Grafana will throw an error.\nChanging the unique identifier allows you to re-import a dashboard, but this is not recommended.\nDon't edit them, instead:\nCopy these dashboards or graphs to your own.\nEdit the copies to get the data how you want it.\nKeeping the original dashboards unedited allows you to continue referencing them, and copying graphs out of them.\nThis also allows you to identify problems with them and open an Issue.\n")),Object(r.b)("p",null,"Import Dashboards"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"Simply click the + on the left nav bar in Grafana and click Import.\nPut in the ID for the dashboard (below) and click the blue Load button.\nSelect the InfluxDB or Prometheus data source you created previously.\nClick the Green Import button on the last screen.\n\nRepeat this for each dashboard you want.\nThe IDs for each database platform are below, use them.\nYou only need Prometheus or Influx, not both. Unless you really want both.\n")),Object(r.b)("p",null,"App \tPrometheus ID \tInflux ID \tGet this if you...\nClient DPI \t11310 \t10419 \t...enabled save_dpi\nSites \t11311 \t10414 \t...enabled save_sites\nUSW \t11312 \t10417 \t...have UniFi Switches\nUSG \t11313 \t10416 \t...have UniFi Gateways\nUAP \t11314 \t10415 \t...have UniFi Access Points\nClients \t11315 \t10418 \t...love nano\nDashboard Update Notes"),Object(r.b)("p",null,"When the dashboards are updated, you have a couple options to update them in Grafana. You can either import them and replace the existing ones (use the same unique identifier), or you can import them as fresh new dashboards by changing the unique identifier. This allows you to keep updating the provided dashboards while maintaining your own. From time to time the dashboards get new features, new graphs, new variables, etc. Giving yourself an easy way to import the updated dashboards provided by this project is ideal. You're able to inspect the changes and apply them to your dashboards with this method."),Object(r.b)("h1",{id:"influx-retention"},"Influx retention"))}u.isMDXComponent=!0},96:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return f}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=o.a.createContext({}),u=function(e){var t=o.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return o.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},h=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(n),h=a,f=c["".concat(i,".").concat(h)]||c[h]||p[h]||r;return n?o.a.createElement(f,s(s({ref:t},d),{},{components:n})):o.a.createElement(f,s({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<r;d++)i[d]=n[d];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);